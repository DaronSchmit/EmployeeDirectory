{"version":3,"sources":["components/EmployeeCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Form/index.js","App.js","index.js"],"names":["EmployeeCard","props","className","alt","name","src","image","occupation","location","onClick","removeEmployee","id","Wrapper","children","Title","Form","value","this","search","onChange","handleInputChange","type","placeholder","handleCategoryChange","od","Component","App","state","employees","searchBy","backup","filter","employee","setState","compareName","a","b","event","target","searchedEmployees","toLowerCase","includes","sortByName","objs","console","log","sort","map","ReactDOM","render","document","getElementById"],"mappings":"2sFA6BeA,MA1Bf,SAAsBC,GACpB,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,UAEnC,qBAAKJ,UAAU,UAAf,SACE,+BACE,+BACE,2CADF,IAC0BD,EAAMG,QAEhC,+BACE,iDADF,IACgCH,EAAMM,cAEtC,+BACE,+CADF,IAC8BN,EAAMO,iBAIxC,sBAAMC,QAAS,kBAAMR,EAAMS,eAAeT,EAAMU,KAAKT,UAAU,SAA/D,8B,MCfSU,MAJf,SAAiBX,GACf,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAMY,Y,MCG1BC,MAJf,SAAeb,GACb,OAAO,oBAAIC,UAAU,QAAd,SAAuBD,EAAMY,YCoBvBE,E,4JArBb,WAEE,OACJ,uBAAMb,UAAU,OAAhB,UACU,uBACEc,MAAOC,KAAKhB,MAAMiB,OAClBd,KAAK,OACLe,SAAUF,KAAKhB,MAAMmB,kBACrBC,KAAK,OACLC,YAAY,kBAEd,yBAAQH,SAAUF,KAAKhB,MAAMsB,qBAA7B,UACE,wBAAQZ,GAAG,IAAX,kBACA,wBAAQa,GAAG,IAAX,kC,GAdOC,a,OCoFJC,E,4MA7EbC,MAAQ,CACNC,YACAV,OAAQ,GACRW,SAAS,OACTC,OAAQF,G,EAGVlB,eAAiB,SAAAC,GAEf,IAAMiB,EAAY,EAAKD,MAAMC,UAAUG,QAAO,SAAAC,GAAQ,OAAIA,EAASrB,KAAOA,KAE1E,EAAKsB,SAAS,CAAEL,e,EAIlBM,YAAc,SAAEC,EAAGC,GACjB,OAAKD,EAAE/B,KAAOgC,EAAEhC,MACN,EAEL+B,EAAE/B,KAAOgC,EAAEhC,KACP,EAEF,G,EAGTgB,kBAAoB,SAAAiB,GAAU,IACrBrB,EAASqB,EAAMC,OAAftB,MACDa,EAAW,CAAC,EAAKF,MAAME,UAC7B,EAAKI,SAAS,CAAC7B,KAAKY,IACpB,IAAMuB,EAAoB,EAAKZ,MAAMG,OAAOC,QAAO,SAAAC,GACjD,OAAOA,EAASH,GAAUW,cAAcC,SAASzB,EAAMwB,kBAEzD,EAAKP,SAAS,CACZL,UAAWW,EACXrB,OAAQF,K,EAIZ0B,WAAa,SAACC,GACZC,QAAQC,IAAIF,GACZ,EAAKV,SAASU,EAAKG,KAAK,EAAKZ,e,EAG/BX,qBAAuB,SAAAc,GAAU,IACxBrB,EAASqB,EAAMC,OAAftB,MACP,EAAKiB,SAAS,CACZJ,SAASb,K,4CAKb,WAAU,IAAD,OACP,OACE,eAAC,EAAD,WACA,gCACE,8CACgBC,KAAKU,MAAME,SAD3B,QAC0CZ,KAAKU,MAAMT,UAErD,cAAC,EAAD,CAAMK,qBAAsBN,KAAKM,qBAAsBH,kBAAmBH,KAAKG,kBAAmBF,OAAQD,KAAKU,MAAMT,YALvH,WAMc,cAAC,EAAD,iCACZ,wBAAQT,QAAS,kBAAM,EAAKiC,WAAWd,IAAvC,0BACCX,KAAKU,MAAMC,UAAUmB,KAAI,SAAAf,GAAQ,OAChC,cAAC,EAAD,CACEtB,eAAgB,EAAKA,eACrBC,GAAIqB,EAASrB,GAEbP,KAAM4B,EAAS5B,KACfE,MAAO0B,EAAS1B,MAChBC,WAAYyB,EAASzB,WACrBC,SAAUwB,EAASxB,UAJdwB,EAASrB,c,GAnERc,a,MCFlBuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.361f227e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction EmployeeCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n      <span onClick={() => props.removeEmployee(props.id)} className=\"remove\">\n        ùòÖ\n      </span>\n    </div>\n  );\n}\n\nexport default EmployeeCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\n\nclass Form extends Component {\n  render() {\n    // Notice how each input has a `value`, `name`, and `onChange` prop\n    return (\n<form className=\"form\">\n          <input\n            value={this.props.search}\n            name=\"name\"\n            onChange={this.props.handleInputChange}\n            type=\"text\"\n            placeholder=\"Employee Name\"\n          />\n          <select onChange={this.props.handleCategoryChange}>\n            <option id=\"0\">name</option>\n            <option od=\"1\">occupation</option>\n          </select>\n        </form>\n\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Form from \"./components/Form\";\nimport employees from \"./employees.json\";\n\nclass App extends Component {\n  // Setting this.state.employees to the employees json array\n  state = {\n    employees,\n    search: \"\",\n    searchBy:\"name\",\n    backup: employees\n  };\n\n  removeEmployee = id => {\n    // Filter this.state.employees for employees with an id not equal to the id being removed\n    const employees = this.state.employees.filter(employee => employee.id !== id);\n    // Set this.state.employees equal to the new employees array\n    this.setState({ employees });\n  };\n\n  //pulled sorting from stackoverflow\n  compareName = ( a, b ) => {\n    if ( a.name < b.name ){\n      return -1;\n    }\n    if ( a.name > b.name ){\n      return 1;\n    }\n    return 0;\n  }\n  \n  handleInputChange = event => {\n    const {value} = event.target;\n    const searchBy = [this.state.searchBy];\n    this.setState({name:value});\n    const searchedEmployees = this.state.backup.filter(employee => {\n      return employee[searchBy].toLowerCase().includes(value.toLowerCase());\n    });\n    this.setState({\n      employees: searchedEmployees,\n      search: value\n    })\n  }\n\n  sortByName = (objs) => {\n    console.log(objs)\n    this.setState(objs.sort(this.compareName));\n  };\n\n  handleCategoryChange = event => {\n    const {value} = event.target\n    this.setState({\n      searchBy:value\n    })\n  }\n\n  // Map over this.state.employees and render a employeeCard component for each employee object\n  render() {\n    return (\n      <Wrapper>\n      <div>\n        <p>\n          searching by {this.state.searchBy} for {this.state.search}\n        </p>\n        <Form handleCategoryChange={this.handleCategoryChange} handleInputChange={this.handleInputChange} search={this.state.search} />\n      </div>        <Title>Employee Directory</Title>\n        <button onClick={() => this.sortByName(employees)}>Sort by Name</button>\n        {this.state.employees.map(employee => (\n          <EmployeeCard\n            removeEmployee={this.removeEmployee}\n            id={employee.id}\n            key={employee.id}\n            name={employee.name}\n            image={employee.image}\n            occupation={employee.occupation}\n            location={employee.location}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}